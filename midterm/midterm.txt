1. POST identifies which resource will handle the request, while PUT encloses the entity that is needed to handle the request. 
2. Relative
3. The difference between a absolute URL and relative URL is information. An absolute URL will provide more information than a realtive URL will.
Absolute URLs mostly take the form of protocol://hostname/file/file and is the only way to connect to another server. A realtive URL may take the form 
of file/file and would be used in linking to a file in the same directory.
4. GET
5. Yes there is as "request_type=PUT" 
6. The server that is exists on.
7. The database is the third tier in called storage and its is to recieve queries and send updates to the logic tier. The web browser is the first tier called
presentation and presents the generated logic tier code to the user in an easy to understand way. 
8. No becuase it was handled correctly and the only time it would is when there was an error. A third party program handles the body. 
9. 
#!/bin/ruby

class Troll

  attr_reader :ugliness, :smelliness, :strength
  
  @grunt = "UNGAH"
  
  def speak()
    $i = 1
	while $i <= 42 do
	  puts @grunt
	  $i += 11
	end
  end
  
  def reverse()
    puts @grunt.backward()
  end
  
  def self.propogate()
    Troll.grunt = "eegah"
  end
end
10. respond_to has not been defined in the troll class.
11. Yes it does becuase the respond_to? method could respond to a string or an integer in the case that the troll might need to respond to health
going down.
12. A boolean logic of either true or false.
13. The only difference is that more attention is payed to the method with the bang on it.
14. It is called Duck typing. Duck typing is a form of dynamic typing that does not care for the type but decides semantics by the functions that the object
is tied to when called. 
15. It will yield an array of strings with each one seperated by a new line.
16. Yes both snippets of code will achieve the same printing of strings as long as more than one string is in the array.
17. You do not need an explicit return method. Ruby will return the last variable assigned in the method.
18. validate, before_save, after_create, after_save
19. HTTP method -- controller action -- CRUD operation
	GET				index				read
	PUT				new					create
	PUT				create				create
	POST			edit				update
	POST			update				update	
	DELETE			delete				delete
20. Becuase there is a lack of browser support for those two commands.
21. There are three main difference between the production and development enviroments. In the development evironment full error messages are displayed
while in production only stubs are given. Cache is disabled in development but fully functional in production. Classes are automatically reloaded in
development while they are not in production.
22. It would be best when using semantics that would not look good with a plural name like peoples.
23. A rails helper method is just like any other instance metthod. They are called when you are trying to keep your code DRY.
24. It must have something that connects it to the Bee class.
25. No because it would cause a massive slow down time. It would be better to wrap it all up into one array as each array is going to be printing the 
same exact thing as the other one.